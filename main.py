import telebot # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
import sqlite3 # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite
import logging
from telebot import custom_filters
import sqlite3
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, Message # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
from telebot.handler_backends import State, StatesGroup # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –±–æ—Ç–∞
import random # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
import json # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON –¥–∞–Ω–Ω—ã–º–∏

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ –≤ —Ñ–∞–π–ª –∏–ª–∏ –∫–æ–Ω—Å–æ–ª—å
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É - —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç BotFather
bot = telebot.TeleBot("7748202816:AAGhyNGFDAp940tEW_Bo4okMzopmYQKoQmM")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_db():
    conn = sqlite3.connect('quiz.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS players (
            user_id INTEGER PRIMARY KEY,
            username TEXT,
            correct_answers INTEGER DEFAULT 0,
            incorrect_answers INTEGER DEFAULT 0
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS questions (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            question TEXT,
            options TEXT,
            correct_answer TEXT,
            subject TEXT
        )
    ''')
    conn.commit()
    conn.close()

init_db() # <--- –í—ã–∑—ã–≤–∞–µ–º init_db() –∑–¥–µ—Å—å, —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
SUBJECT_MAP = {
    "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞": "math",
    "–ò—Å—Ç–æ—Ä–∏—è": "history",
    "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞": "literature",
}

# –°–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞ - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
class QuizStates(StatesGroup):
    choose_subject = State() # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
    answer = State() # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def create_main_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True) # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup.add(KeyboardButton("/quiz")) # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
    markup.add(KeyboardButton("/score")) # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    return markup # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–µ–¥–º–µ—Ç–∞
def create_subject_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True) # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    for subject in SUBJECT_MAP: # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        markup.add(KeyboardButton(subject)) # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    markup.row(KeyboardButton("üö™ –í—ã—Ö–æ–¥")) # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã—Ö–æ–¥–∞
    return markup # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞
def create_options_keyboard(options):
    markup = ReplyKeyboardMarkup(resize_keyboard=True) # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    for option in options: # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞
        markup.add(KeyboardButton(option)) # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    markup.row(KeyboardButton("üö™ –í—ã—Ö–æ–¥")) # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã—Ö–æ–¥–∞
    return markup # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_question(subject_key, user_id):
    try:
        conn = sqlite3.connect('quiz.db')
        cursor = conn.cursor()

        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞—Å—Å –∏–≥—Ä–æ–∫–∞. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
        cursor.execute("SELECT grade FROM players WHERE user_id = ?", (user_id,))
        result = cursor.fetchone()
        if not result:
            logging.error(f"–ò–≥—Ä–æ–∫ —Å user_id {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return None
        player_grade = result[0]

        min_difficulty = max(1, int(player_grade - 1))
        max_difficulty = min(11, int(player_grade + 1))

        # –ó–∞–ø—Ä–æ—Å –≤–æ–ø—Ä–æ—Å–∞ —Å —É—á–µ—Ç–æ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        cursor.execute(
            "SELECT question, correct_answer, options, explanation, link, difficulty "  # –î–æ–±–∞–≤–∏–ª–∏ explanation –∏ link
            "FROM questions "
            "WHERE subject = ? AND difficulty BETWEEN ? AND ? "
            "ORDER BY RANDOM() LIMIT 1",
            (subject_key, min_difficulty, max_difficulty)
        )
        question_data = cursor.fetchone()

        if question_data:
            question, correct_answer, options_str, explanation, link, difficulty = question_data  # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Å explanation –∏ link

            try:
                options = json.loads(options_str)
            except json.JSONDecodeError:
                options = options_str.split(',')
                options = [opt.strip() for opt in options]

            if correct_answer not in options:
                options.append(correct_answer)

            random.shuffle(options)
            return {
                "question": question,
                "correct_answer": correct_answer,
                "options": options,
                "explanation": explanation,  # –î–æ–±–∞–≤–∏–ª–∏ explanation –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π —Å–ª–æ–≤–∞—Ä—å
                "link": link,  # –î–æ–±–∞–≤–∏–ª–∏ link –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π —Å–ª–æ–≤–∞—Ä—å
                "difficulty": difficulty
            }
        else:
            return None

    except sqlite3.Error as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ë–î –≤ get_question: {e}")
        return None
    finally:
        if conn:
            conn.close()




# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
@bot.message_handler(commands=["start"])
def start(msg):
    user_id = msg.from_user.id
    username = msg.from_user.username
    try:
        conn = sqlite3.connect('quiz.db')
        cursor = conn.cursor()
        cursor.execute('''
            INSERT OR IGNORE INTO players (user_id, username, grade) 
            VALUES (?, ?, ?)
        ''', (user_id, username, 5.0))  # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π grade = 5.0
        conn.commit()

        with open("–ö–∞—Ä—Ç–∏–Ω–∫–∞_start.jpg", 'rb') as photo:
            bot.send_photo(msg.chat.id, photo)
        bot.send_message(msg.chat.id, "üéâ ... (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ) ...", reply_markup=create_main_keyboard())

        bot.send_message(msg.chat.id, "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /quiz –¥–ª—è —Å—Ç–∞—Ä—Ç–∞", reply_markup=create_main_keyboard()) # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    except sqlite3.Error as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ë–î –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ: {e}")
    finally:
        if conn:
            conn.close()


@bot.message_handler(commands=["help"])
def help(msg):
    text = """
üéì <b>LucasTeamEducationBot</b> ‚Äî —Ç–≤–æ–π —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –æ–±—É—á–µ–Ω–∏–∏!

üìö <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/quiz - –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É (–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –ò—Å—Ç–æ—Ä–∏—è, –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞)
/score - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üéÆ <b>–ú–∏–Ω–∏-–∏–≥—Ä—ã:</b>
‚Ä¢ –í–∏—Å–µ–ª–∏—Ü–∞ (—É–≥–∞–¥–∞–π —Ç–µ—Ä–º–∏–Ω)
‚Ä¢ –ú–∞—Ç–±–æ–π (—Ä–µ—à–∞–π –ø—Ä–∏–º–µ—Ä—ã –Ω–∞ –≤—Ä–µ–º—è)
‚Ä¢ –í–µ—Ä—é/–ù–µ –≤–µ—Ä—é (–æ–ø—Ä–µ–¥–µ–ª–∏ –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç—å)

üìä <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–¥ —Ç–≤–æ–π –∫–ª–∞—Å—Å (1-11)
‚Ä¢ –†–∞–∑–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤ —Å —É—á–µ–±–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ –±–µ–π–¥–∂–µ–π
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

üèÜ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>
–≠—Ä—É–¥–∏—Ç | –°–ø—Ä–∏–Ω—Ç–µ—Ä | –î–µ—Ç–µ–∫—Ç–æ—Ä –ª–∂–∏

üìÜ <i>–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!</i>

–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:
‚Ä¢ @LucasTeamLuke (–õ–∏–¥–µ—Ä)
‚Ä¢ @EnidBlaiton

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —á–∞—Ç—É: 
t.me/+6Q4LbNIZFAMwMDI6
"""
    bot.send_message(msg.chat.id, text, reply_markup=create_main_keyboard(), parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /quiz - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /quiz
@bot.message_handler(commands=["quiz"])
def start_quiz(msg):
    bot.delete_state(msg.from_user.id, msg.chat.id) # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
    bot.send_message(msg.chat.id, "üìö –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=create_subject_keyboard())
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ "–≤—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞"
    bot.set_state(msg.from_user.id, QuizStates.choose_subject, msg.chat.id)


@bot.message_handler(state=QuizStates.choose_subject)
def handle_subject_selection(msg: Message):
    if msg.text.strip() == "üö™ –í—ã—Ö–æ–¥":
        bot.delete_state(msg.from_user.id, msg.chat.id)
        bot.send_message(msg.chat.id, "üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                         reply_markup=create_main_keyboard())
        return

    subject_key = SUBJECT_MAP.get(msg.text)
    if not subject_key:
        bot.send_message(msg.chat.id, "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞!",
                         reply_markup=create_subject_keyboard())
        return

    try:
        conn = sqlite3.connect('quiz.db')
        cursor = conn.cursor()

        user_id = msg.from_user.id

        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞—Å—Å –∏–≥—Ä–æ–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–ò–°–ü–†–ê–í–õ–ï–ù–û)
        cursor.execute("SELECT grade FROM players WHERE user_id = ?", (user_id,))
        player_grade = cursor.fetchone()[0]

        question = get_question(subject_key, player_grade)
        if not question:
            bot.send_message(msg.chat.id, "‚ö†Ô∏è –í–æ–ø—Ä–æ—Å—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞",
                             reply_markup=create_main_keyboard())
            bot.delete_state(msg.from_user.id, msg.chat.id)
            return

        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        for option in question['options']:
            markup.add(KeyboardButton(option))

        with bot.retrieve_data(msg.from_user.id, msg.chat.id) as data:
            data["correct_answer"] = question['correct_answer']
            data["subject"] = subject_key
            data["question_difficulty"] = question["difficulty"]
            data["explanation"] = question["explanation"]
            data["link"] = question["link"]

        bot.send_message(msg.chat.id, question['question'], reply_markup=markup)
        bot.set_state(msg.from_user.id, QuizStates.answer, msg.chat.id)

    except (sqlite3.Error, ValueError) as e:
        logging.error(f"–û—à–∏–±–∫–∞: {e}", exc_info=True)
        bot.send_message(msg.chat.id, "‚ùå –°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞",
                         reply_markup=create_main_keyboard())
        bot.delete_state(msg.from_user.id, msg.chat.id)
    finally:
        if conn:
            conn.close()



@bot.message_handler(state=QuizStates.answer) # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
def handle_answer(msg: Message):
    try: # –ù–∞—á–∏–Ω–∞–µ–º –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        if msg.text.startswith('/'): # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å / (–∫–æ–º–∞–Ω–¥–∞)
            bot.process_new_messages([msg])  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
            bot.delete_state(msg.from_user.id, msg.chat.id) # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            return # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

        logging.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {msg.text} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {msg.from_user.id} –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ {bot.get_state(msg.from_user.id, msg.chat.id)}") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–≥ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        chat_id = msg.chat.id # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞
        user_id = msg.from_user.id # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


        if msg.text.startswith("/"):  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∫–æ–º–∞–Ω–¥–∞ (–Ω–µ –¥–æ–ª–∂–Ω–æ —Å—é–¥–∞ –ø–æ–ø–∞–¥–∞—Ç—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏)
            return # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º

        if msg.text.strip() == "üö™ –í—ã—Ö–æ–¥": # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–í—ã—Ö–æ–¥"
            bot.delete_state(user_id, chat_id) # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            bot.send_message(chat_id, "üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=create_main_keyboard()) # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            return # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

        with bot.retrieve_data(user_id, chat_id) as data: # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_answer = msg.text.strip().lower() # –ü—Ä–∏–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
            correct_answer = data["correct_answer"].strip().lower() # –ü—Ä–∏–≤–æ–¥–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
            correct = user_answer == correct_answer # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
            if correct: # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –≤–µ—Ä–Ω—ã–π
                result_message = "‚úÖ –í–µ—Ä–Ω–æ!"
            else: # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π
                result_message = f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}"

            conn = sqlite3.connect('quiz.db') # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            cursor = conn.cursor() # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            cursor.execute('''
                UPDATE players 
                SET correct_answers = correct_answers + ?, incorrect_answers = incorrect_answers + ? 
                WHERE user_id = ?
            ''', (int(correct), int(not correct), user_id))
            conn.commit() # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            conn.close() # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ

            new_question = get_question(data["subject"]) # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å

            if new_question: # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
                markup = create_options_keyboard(new_question['options']) # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞
                data["correct_answer"] = new_question['correct_answer']  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                bot.send_message(chat_id, result_message) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
                bot.send_message(chat_id, new_question['question'], reply_markup=markup) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
            else: # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç
                bot.send_message(chat_id, result_message) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
                bot.send_message(chat_id, "üèÅ –í–æ–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!", reply_markup=create_main_keyboard()) # –°–æ–æ–±—â–∞–µ–º –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
                bot.delete_state(user_id, chat_id) # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    except Exception as e: # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_answer: {str(e)}", exc_info=True) # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –ª–æ–≥
        bot.send_message(chat_id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.") # –°–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ



@bot.message_handler(commands=["score"]) # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /score - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /score
def show_score(msg):
    try: # –ù–∞—á–∏–Ω–∞–µ–º –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        user_id = msg.from_user.id # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        conn = sqlite3.connect('quiz.db') # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor = conn.cursor() # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä
        cursor.execute("SELECT correct_answers, incorrect_answers FROM players WHERE user_id = ?", (user_id,)) # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        stats = cursor.fetchone() # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        if stats: # –ï—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–π–¥–µ–Ω–∞
            correct, incorrect = stats # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
            total = correct + incorrect # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤
            response = f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {correct}\n‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {incorrect}\nüèÜ –í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫: {total}" # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        else: # –ï—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            response = "‚ùå –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" # –°–æ–æ–±—â–∞–µ–º –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

        bot.send_message(msg.chat.id, response, reply_markup=create_main_keyboard()) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π

    except sqlite3.Error as e: # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        logging.error(f"–û—à–∏–±–∫–∞ –ë–î –≤ show_score: {e}") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –ª–æ–≥
        bot.send_message(msg.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏") # –°–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
    finally: # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞
        if conn: # –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
            conn.close() # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ


bot.add_custom_filter(custom_filters.StateFilter(bot)) # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä —Å–æ—Å—Ç–æ—è–Ω–∏–π
if __name__ == "__main__":
    init_db()  # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
    try:
        bot.remove_webhook()
        bot.infinity_polling(timeout=30, long_polling_timeout=30)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

